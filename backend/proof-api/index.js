import { initialize } from "zokrates-js";

const inputs = [
  [
    "59",
    "82",
    "184",
    "33",
    "61",
    "206",
    "41",
    "212",
    "0",
    "24",
    "199",
    "106",
    "251",
    "25",
    "239",
    "75",
    "105",
    "89",
    "238",
    "44",
    "84",
    "168",
    "213",
    "80",
    "101",
    "109",
    "167",
    "198",
    "74",
    "43",
    "203",
    "107",
  ],
  [
    "10",
    "46",
    "66",
    "27",
    "35",
    "10",
    "180",
    "115",
    "97",
    "157",
    "158",
    "43",
    "75",
    "79",
    "187",
    "193",
    "226",
    "194",
    "197",
    "211",
  ],
  [
    "36",
    "101",
    "243",
    "111",
    "12",
    "249",
    "77",
    "75",
    "234",
    "119",
    "166",
    "241",
    "215",
    "117",
    "152",
    "66",
    "116",
    "70",
    "30",
    "54",
  ],
  [
    "246",
    "130",
    "40",
    "143",
    "177",
    "237",
    "14",
    "242",
    "46",
    "198",
    "45",
    "251",
    "187",
    "210",
    "54",
    "81",
    "197",
    "111",
    "247",
    "179",
    "13",
    "86",
    "189",
    "88",
    "79",
    "206",
    "209",
    "192",
    "168",
    "14",
    "143",
    "228",
  ],
  [
    "249",
    "176",
    "131",
    "59",
    "206",
    "211",
    "167",
    "168",
    "32",
    "80",
    "219",
    "122",
    "233",
    "143",
    "124",
    "128",
    "125",
    "93",
    "186",
    "1",
    "61",
    "121",
    "163",
    "164",
    "90",
    "206",
    "182",
    "243",
    "118",
    "138",
    "171",
    "24",
  ],
];

const inputs2 = [
  [
    "155",
    "141",
    "126",
    "51",
    "156",
    "89",
    "151",
    "125",
    "56",
    "129",
    "143",
    "47",
    "224",
    "100",
    "156",
    "210",
    "68",
    "195",
    "230",
    "131",
    "159",
    "206",
    "225",
    "26",
    "210",
    "160",
    "254",
    "214",
    "204",
    "80",
    "24",
    "172",
  ],
  [
    "10",
    "46",
    "66",
    "27",
    "35",
    "10",
    "180",
    "115",
    "97",
    "157",
    "158",
    "43",
    "75",
    "79",
    "187",
    "193",
    "226",
    "194",
    "197",
    "211",
  ],
  [
    "36",
    "101",
    "243",
    "111",
    "12",
    "249",
    "77",
    "75",
    "234",
    "119",
    "166",
    "241",
    "215",
    "117",
    "152",
    "66",
    "116",
    "70",
    "30",
    "54",
  ],
  [
    "184",
    "158",
    "2",
    "72",
    "93",
    "160",
    "14",
    "108",
    "100",
    "163",
    "175",
    "178",
    "244",
    "196",
    "31",
    "25",
    "232",
    "80",
    "92",
    "27",
    "207",
    "94",
    "123",
    "18",
    "137",
    "7",
    "161",
    "59",
    "116",
    "28",
    "84",
    "133",
  ],
  [
    "249",
    "176",
    "131",
    "59",
    "206",
    "211",
    "167",
    "168",
    "32",
    "80",
    "219",
    "122",
    "233",
    "143",
    "124",
    "128",
    "125",
    "93",
    "186",
    "1",
    "61",
    "121",
    "163",
    "164",
    "90",
    "206",
    "182",
    "243",
    "118",
    "138",
    "171",
    "24",
  ],
];

initialize().then((zokratesProvider) => {
  const source = `
    import "hashes/keccak/256bit" as keccak256;
    def main(private u8[32] password, u8[20] locker, u8[20] unlocker, u8[32] unlockHash, u8[32] lockHash) {
    u8[52] f = [...password, ...locker];
    u8[52] s = [...password, ...unlocker];

    u8[32] newLockHash = keccak256(f);
    u8[32] newUnlockHash = keccak256(s);

    bool firstPass = lockHash == newLockHash;
    bool secondPass = unlockHash == newUnlockHash;

    assert(firstPass);
    assert(secondPass);
}`;

  // compilation
  const artifacts = zokratesProvider.compile(source);

  console.log("compiled");

  // run setup
  const keypair = zokratesProvider.setup(artifacts.program);

  console.log("setup");

  // computation
  const { witness, output } = zokratesProvider.computeWitness(
    artifacts,
    inputs2,
  );

  console.log(output);

  // generate proof
  const proof = zokratesProvider.generateProof(
    artifacts.program,
    witness,
    keypair.pk,
  );

  var p = zokratesProvider.utils.formatProof(proof);

  var res = JSON.stringify(proof);
  console.log(res);
});
